---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: databases.pgdb.storage.meschbach.com
spec:
  group: pgdb.storage.meschbach.com
  names:
    kind: Database
    listKind: DatabaseList
    plural: databases
    singular: database
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.controller
      name: Controller
      type: string
    - jsonPath: .status.state
      name: Status
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Database is the Schema for the databases API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseSpec defines the desired state of Database
            properties:
              allowPasswordSpecials:
                default: true
                description: AllowPasswordSpecials will allow for special characters
                  in passwords, such as ()[]{}*$! etc
                type: boolean
              clusterNamespace:
                description: ClusterNamespace is the namespace of the cluster secret
                type: string
              clusterSecret:
                description: ClusterSecret is the name of the a secret containing
                  postgres login info for setting up a datastore
                type: string
              controller:
                description: |-
                  Controller allows multiple controllers to run in a cluster simultaneously.  If not set then the default controller
                  will be used
                type: string
              databaseSecret:
                description: DatabaseSecret is the target secret to write authentication
                  info to.
                type: string
            type: object
          status:
            description: DatabaseStatus defines the observed state of Database
            properties:
              connected:
                description: |-
                  Connected indicates the operator was able to connect to the target cluster. Missing or nil means a connection
                  was not attempted
                type: boolean
              database-name:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                type: string
              database-secret:
                description: DatabaseSecretName is the name of the created database
                  secret
                type: string
              ready:
                description: Ready indicates teh database has been created and is
                  ready for use
                type: boolean
              secret-valid:
                description: |-
                  ClusterSecretValid is true when the cluster secret has a proper structure for connection, otherwise false.
                  Missing or nil indicates this was not resolved.
                type: boolean
              state:
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
